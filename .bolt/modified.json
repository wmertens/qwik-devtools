[["/home/project/src/routes/index.tsx","import { component$, useStore, useVisibleTask$, useSignal, $ } from '@builder.io/qwik';\nimport type { DocumentHead } from '@builder.io/qwik-city';\n\nconst JsonView = component$(({ value, startOpen = true }: { value: unknown, startOpen?: boolean }) => {\n  const isOpen = useSignal(startOpen);\n\n  const toggleOpen = $(() => {\n    isOpen.value = !isOpen.value;\n  });\n\n  const renderValue = (val: unknown) => {\n    if (typeof val === 'string') return `\"${val}\"`;\n    if (typeof val === 'number' || typeof val === 'boolean') return String(val);\n    if (val === null) return 'null';\n    if (Array.isArray(val)) return '[...]';\n    if (typeof val === 'object') return '{...}';\n    return 'undefined';\n  };\n\n  return (\n    <div style=\"margin-left: 20px;\">\n      {typeof value === 'object' && value !== null ? (\n        <div>\n          <span onClick$={toggleOpen} style=\"cursor: pointer;\">\n            {isOpen.value ? '▼' : '▶'} {Array.isArray(value) ? '[]' : '{}'}\n          </span>\n          {isOpen.value && (\n            <div>\n              {Object.entries(value).map(([key, val]) => (\n                <div key={key}>\n                  <span>{key}: </span>\n                  <JsonView value={val} startOpen={false} />\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      ) : (\n        <span>{renderValue(value)}</span>\n      )}\n    </div>\n  );\n});\n\ninterface QwikContainer {\n  id: string;\n  tagName: string;\n  childrenCount: number;\n  state: any;\n}\n\nexport default component$(() => {\n  const store = useStore<{ containers: QwikContainer[] }>({\n    containers: [],\n  });\n\n  useVisibleTask$(() => {\n    const analyzeContainers = () => {\n      if (typeof chrome !== 'undefined' && chrome.tabs) {\n        // Chrome extension environment\n        chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n          const activeTab = tabs[0];\n          if (activeTab.id) {\n            chrome.tabs.sendMessage(\n              activeTab.id,\n              { action: 'analyzeQwikContainers' },\n              (response: QwikContainer[]) => {\n                store.containers = response;\n              }\n            );\n          }\n        });\n      } else {\n        // Development environment\n        const containers = document.querySelectorAll('[q\\\\:container]');\n        store.containers = Array.from(containers).map(container => {\n          const stateScript = container.querySelector('script[type=\"qwik/state\"]');\n          let state = null;\n          if (stateScript) {\n            try {\n              state = JSON.parse(stateScript.textContent || '');\n            } catch (error) {\n              console.error('Error parsing Qwik state:', error);\n            }\n          }\n          return {\n            id: container.getAttribute('q:container') || '',\n            tagName: container.tagName.toLowerCase(),\n            childrenCount: container.childElementCount,\n            state: state\n          };\n        });\n      }\n    };\n\n    analyzeContainers();\n\n    // Re-analyze containers every 5 seconds\n    const interval = setInterval(analyzeContainers, 5000);\n\n    return () => clearInterval(interval);\n  });\n\n  return (\n    <div class=\"container\">\n      <h1>\n        <span class=\"highlight\">Qwik</span> Containers\n      </h1>\n      {store.containers.length === 0 ? (\n        <p>No Qwik containers found on the page.</p>\n      ) : (\n        <ul>\n          {store.containers.map((container) => (\n            <li key={container.id}>\n              <strong>ID:</strong> {container.id}\n              <br />\n              <strong>Tag:</strong> {container.tagName}\n              <br />\n              <strong>Children:</strong> {container.childrenCount}\n              {container.state && (\n                <div class=\"state-inspector\">\n                  <h3>State:</h3>\n                  <JsonView value={container.state} />\n                </div>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n});\n\nexport const head: DocumentHead = {\n  title: 'Qwik DevTools',\n};"]]